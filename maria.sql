DROP TABLE IF EXISTS PostLike;
DROP TABLE IF EXISTS TopicLike;
DROP TABLE IF EXISTS Post;
DROP TABLE IF EXISTS Topic;
DROP TABLE IF EXISTS Forum;
DROP TABLE IF EXISTS Person;

CREATE TABLE Person (
 id INTEGER PRIMARY KEY AUTO_INCREMENT,
 name VARCHAR(100)  NOT NULL,
 username VARCHAR(100)  NOT NULL UNIQUE,
 stuId VARCHAR(100)  NULL
);

CREATE TABLE Forum (
id   INTEGER   PRIMARY KEY AUTO_INCREMENT,
title   VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE Topic (
id   INTEGER   PRIMARY KEY AUTO_INCREMENT,
title   VARCHAR(100)  NOT NULL,
forumId INTEGER   NOT NULL,
owner   INTEGER    NOT NULL,
text   TEXT     NOT NULL,
created TIMESTAMP NOT NULL,
FOREIGN KEY (forumId) REFERENCES Forum(id),
FOREIGN KEY (owner) REFERENCES Person(id)
);

CREATE TABLE Post (
postId INTEGER   NOT NULL,
text    TEXT    NOT NULL,
topicId INTEGER    NOT NULL,
user    INTEGER   NOT NULL,
createdAt TIMESTAMP   NOT NULL,
FOREIGN KEY (topicId) REFERENCES Topic(id),
FOREIGN KEY (user) REFERENCES Person(id),
PRIMARY KEY (postId, topicId)
);

CREATE TABLE TopicLike (
user   INTEGER    NOT NULL,
topicId INTEGER   NOT NULL,
topiclike   BOOLEAN   NULL,
FOREIGN KEY (user) REFERENCES Person(id),
FOREIGN KEY (topicId) REFERENCES Topic(id),
PRIMARY KEY (user, topicId)
);

CREATE TABLE PostLike (
user   INTEGER    NOT NULL,
topicId INTEGER   NOT NULL,
post   INTEGER   NOT NULL,
postlike  BOOLEAN   NULL,
FOREIGN KEY (user) REFERENCES Person(id),
FOREIGN KEY (topicId) REFERENCES Topic(id),
FOREIGN KEY (post) REFERENCES Post(postId),
PRIMARY KEY (user, topicId, post)
);
